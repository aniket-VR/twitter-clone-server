// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  firstName       String
  lastName        String?
  email           String    @unique
  profileImageUrl String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  tweets          Tweet[]
  followers       Follows[] @relation("follower")
  following       Follows[] @relation("following")
}

model Follows {
  follower   User   @relation("follower", references: [id], fields: [followerId])
  followerId String

  following   User   @relation("following", references: [id], fields: [followingId])
  followingId String

  @@id([followerId, followingId])
}

model MessageContainer {
  sender         String
  reciver        String
  id             String    @id @default(cuid())
  reciverMessage Message[] @relation("senderMessage")
}

model Message {
  container   MessageContainer @relation("senderMessage", references: [id], fields: [containerId])
  containerId String
  senderID    String
  reciverId   String
  message     String
  id          String           @id @default(cuid())
}

model Tweet {
  id       String  @id @default(cuid())
  content  String
  imageURL String?

  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
